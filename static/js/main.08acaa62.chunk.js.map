{"version":3,"sources":["Container/index.js","Actions/crud.js","Components/Sentence/index.jsx","Components/Add/index.jsx","Layouts/index.jsx","Store/index.js","Reducer/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["callFetch","dispatch","type","fetch","then","response","json","data","INIT","payload","hitokoto","from","from_who","ADD","DELETE","useStyles","makeStyles","displayFlex","display","textSide","width","textAlign","color","cursor","RenderTodoList","sentenceList","useSelector","state","sentence","useDispatch","classes","renderSentence","_flow","_values","_map","className","split","onClick","item","getStore","index","indexOf","newSentence","splice","useMemo","Add","Main","useEffect","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08acaa62.chunk.js","sourcesContent":["import { ADD, INIT } from '../Actions';\r\n\r\nexport const callFetch = (dispatch, type) => {\r\n  fetch(\r\n    'https://v1.hitokoto.cn'\r\n  ) .then((response) => response.json())\r\n    .then((data) => {\r\n      switch (type) {\r\n        case 'INIT':\r\n          dispatch({\r\n            type: INIT,\r\n            payload: [`${data?.hitokoto},${data?.from},${data?.from_who || 'None'}`],\r\n          });\r\n          break;\r\n        case 'ADD':\r\n          dispatch({\r\n            type: ADD,\r\n            payload: `${data?.hitokoto},${data?.from},${data?.from_who || 'None'}`,\r\n          })\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      \r\n  })\r\n};","import { callFetch } from '../Container';\r\n\r\nexport const DELETE = 'DELETE';\r\nexport const INIT = 'INIT';\r\nexport const ADD = 'ADD';\r\n\r\nexport const deleteItem = (item) => {\r\n  return (dispatch, getStore) => {\r\n    const { sentence } = getStore();\r\n    const index = sentence.indexOf(item);\r\n    const newSentence = [ ...sentence ];\r\n    newSentence.splice(index, 1);\r\n    dispatch({\r\n      type: DELETE,\r\n      payload: newSentence,\r\n    });\r\n  }\r\n};\r\n\r\nexport const initial = (allItem) => {\r\n  return dispatch => callFetch(dispatch, 'INIT');\r\n};\r\n\r\nexport const addItem = () => {\r\n  return (dispatch, getStore) => callFetch(dispatch, 'ADD');\r\n};","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport _map from 'lodash/fp/map';\r\nimport _flow from 'lodash/fp/flow';\r\nimport _values from 'lodash/fp/values';\r\nimport { initial, deleteItem, addItem } from '../../Actions';\r\n\r\nconst useStyles = makeStyles({\r\n  displayFlex: {\r\n    display: 'flex',\r\n  },\r\n  textSide: {\r\n    width: 'fit-content',\r\n    textAlign: 'left',\r\n    \"&:hover\": {\r\n      color: 'red'\r\n    },\r\n    cursor: 'pointer'\r\n  }\r\n});\r\n\r\nexport default function RenderTodoList() {\r\n  const sentenceList = useSelector(state => state.sentence);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const renderSentence = () => {\r\n    return (\r\n      _flow(\r\n        _values(),\r\n        _map(sentenceList => (\r\n          <li key='sentence'>\r\n            <div className={'sentence', classes.displayFlex}>\r\n              <div>Sentence:&nbsp;</div>\r\n              <div>{sentenceList.split(',')[0]}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n              <div>From:&nbsp;</div>\r\n              <div>{sentenceList.split(',')[1]}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n              <div>From_Whom:&nbsp;</div>\r\n              <div>{sentenceList.split(',')[2]}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n              <div \r\n                className={classes.textSide}\r\n                onClick={() => dispatch(deleteItem(sentenceList))}\r\n              >Delete</div>\r\n            </div>\r\n          </li>\r\n          )),\r\n      )(sentenceList)\r\n    );\r\n  };\r\n  return (\r\n    useMemo(() => renderSentence(), [sentenceList])\r\n  );\r\n};","import { makeStyles } from '@material-ui/styles';\r\nimport { initial, deleteItem, addItem } from '../../Actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n  textSide: {\r\n    width: 'fit-content',\r\n    textAlign: 'left',\r\n    \"&:hover\": {\r\n      color: 'red'\r\n    },\r\n    cursor: 'pointer'\r\n  }\r\n});\r\n\r\nfunction Add() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div \r\n      className={classes.textSide}\r\n      onClick={() => dispatch(addItem())}\r\n      >Add\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { initial, deleteItem, addItem } from '../Actions';\r\nimport RenderTodoList from '../Components/Sentence';\r\nimport Add from '../Components/Add';\r\n\r\nexport default function Main() {\r\n  const sentenceList = useSelector(state => state.sentence);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(!sentenceList) {\r\n      dispatch(initial());\r\n    }\r\n  }, [sentenceList, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Add />\r\n      <ul>\r\n        <RenderTodoList />\r\n      </ul>\r\n    </div>\r\n  );\r\n};","import { reducer } from '../Reducer';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore( reducer, composeEnhancers(applyMiddleware(thunk)) );\r\n","import { DELETE, INIT, ADD } from '../Actions';\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { ...state, sentence: [ action.payload, ...state.sentence ] };\r\n    case DELETE:\r\n      return { ...state, sentence: [...action.payload] };\r\n    case INIT:\r\n      return { sentence: [...action.payload] };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { Provider } from 'react-redux';\nimport './App.css';\nimport Main from './Layouts';\nimport React from 'react';\nimport { store } from './Store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Main />\n        </header>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}